name: Deploy AI Model to AWS ECS

on:
  push:
    branches:
      - main  # Trigger this workflow on push to main branch

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REPO: my-llm-api-repo
      ECS_CLUSTER: llm-cluster
      ECS_SERVICE: llm-service
      CONTAINER_NAME: llm-api-container

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $(aws sts get-caller-identity --query 'Account' --output text).dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build, tag, and push image to ECR
        run: |
          IMAGE_TAG=llm-api:$(git rev-parse --short HEAD)
          ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
          ECR_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO
          docker build -t $ECR_URI:$IMAGE_TAG ./app
          docker push $ECR_URI:$IMAGE_TAG
          echo "IMAGE_URI=$ECR_URI:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          image: ${{ env.IMAGE_URI }}
          wait-for-service-stability: true

